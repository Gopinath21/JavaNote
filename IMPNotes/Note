 Explict Type casting :--
 When you want to cast an object to a reference variable of an interface type.
 When you want to cast an instance of a parent class to its subclass

Nesting of oparators :
Need to verify
int a=10,b=5,c=8,d=2;
boolean e= a%d < d && a/b < b+a*d;
S.o.p(e);

-----------------------------------------
abstract interface Drivable{
public static final int WHEELS =4;
public static void start();
public abstract void drive();
}

C.E @ 3  // abstract & static is illegal combination
-----------------------------------------

public static void main(String[] args){

int x=18; int y=7;
boolean a,b;
a=false;
if(x/2<y+3)
a=true;
b=true;
// Insert the code 
}
===================
String  str="My String";
String str1="My String";
if(str==Str1)System.out.println("equals");
else 
Sop("Not equal");

=======================================
public class Looping{
     public static void main(String [] ar ){
      int a=0;
      int b=10;
      for(int c=0; b>c;b--)
      c++;
      System.out.println(a+" " +b+ "  " +c );
     
     }
}
==============================================================
public static void main(String[] args){
int[] numbers={1,5,8,9,22,10};
myClass calc =new myClass();
System.out.println(calc.sum(numbers));
}
void sum(int[] numbers){
return true;
}
//C.E @ 07 line [return true]
NOte : Can we  create a constructor for the abstact class.
